{"version":3,"sources":["reportWebVitals.ts","feature/task/task.slice.ts","feature/task/taskPost/tags/Tags.tsx","feature/task/taskPost/tags/index.tsx","feature/task/taskPost/taskForm.validations.ts","feature/task/taskPost/TaskForm.tsx","feature/task/taskPost/index.tsx","feature/home/modal/useModal.ts","feature/home/modal/Modal.tsx","feature/home/index.tsx","feature/task/task.layout.tsx","feature/task/tasks/TaskItem.tsx","feature/task/tasks/index.tsx","feature/task/task/task.item.tsx","feature/task/task/index.tsx","feature/task/taskDelete/index.tsx","feature/task/useTasks.ts","feature/home/useStartup.ts","App.tsx","redux/store.ts","theme/main.theme.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","taskSlice","createSlice","name","initialState","tasks","range","take","skip","reducers","initTasks","state","action","payload","addTask","push","editTask","idx","findIndex","i","id","removeTask","filter","loadCurrent","currentTaskId","loadSearchedItems","searchText","actions","selectSelf","selectTasks","createDraftSafeSelector","task","slice","selectCurrentTask","find","Tag","tags","handleDelete","Box","sx","margin","display","Stack","direction","gap","map","data","Chip","label","variant","onDelete","InputTags","component","initiate","insert","remove","useState","setTags","tagRef","useRef","useEffect","initialTags","flexGrow","cloneElement","autoComplete","onKeyDown","e","code","stopPropagation","preventDefault","current","tag","value","prev","t","length","placeholder","inputRef","InputProps","startAdornment","Tags","text","val","newTags","EMPTY_TASK","title","description","priority","priorities","validationSchema","yup","trim","min","required","of","nullable","oneOf","defined","TaskForm","onSubmit","formik","useFormik","initialValues","Object","keys","forEach","key","setFieldValue","setInitialTags","useCallback","callback","handleSubmit","style","maxWidth","noValidate","Grid","container","alignItems","spacing","item","FormControl","TextField","fullWidth","values","onChange","handleChange","error","touched","Boolean","errors","helperText","validateOnChange","render","arrayHelpers","Typography","color","RadioGroup","row","FormControlLabel","checked","control","Radio","Button","type","defaultProps","undefined","TaskPost","navigate","useNavigate","dispatch","useDispatch","taskId","useParams","useSelector","formState","setFormState","columns","xs","md","String","Math","random","useModal","isOpen","setOpen","handleOpen","handleClose","position","top","left","transform","width","bgcolor","border","boxShadow","p","BasicModal","open","onClose","children","Modal","Home","Container","onClick","Link","to","TaskLayout","TaskComponent","overflow","px","Paper","my","mx","wrap","Avatar","zeroMinWidth","noWrap","ButtonGroup","size","join","TasksList","TaskItem","Task","useTasks","Array","fill","x","useStartup","App","path","index","element","configureStore","reducer","taskReducer","theme","createTheme","palette","primary","main","secondary","mainTheme","info","ReactDOM","StrictMode","store","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.9dcac9ff.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createDraftSafeSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Task } from './task.type';\n\nexport interface PartialState {\n  tasks: Task[];\n  currentTaskId?: string | number;\n  searchText?: string;\n  range?: {\n    skip: number;\n    take: number;\n  }\n}\n\nconst initialState: PartialState = {\n  tasks: [],\n  range: { take: 50, skip: 0 },\n};\n\nexport const taskSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    initTasks: (state, action: PayloadAction<Task[]>) => {\n      state.tasks = action.payload;\n    },\n    addTask: (state, action: PayloadAction<Task>) => {\n      state.tasks.push(action.payload);\n    },\n    editTask: (state, action: PayloadAction<Task>) => {\n      const idx = state.tasks.findIndex((i) => i.id === action.payload.id);\n      state.tasks[idx] = action.payload;\n    },\n    removeTask: (state, action: PayloadAction<string>) => {\n      state.tasks = state.tasks.filter((i) => i.id !== action.payload);\n    },\n    loadCurrent: (state, action: PayloadAction<string | undefined>) => {\n      state.currentTaskId = action.payload;\n    },\n    loadSearchedItems: (state, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n  },\n});\n\nexport const {\n  initTasks, addTask, editTask, removeTask, loadCurrent, loadSearchedItems,\n} = taskSlice.actions;\n\nconst selectSelf = (state: { task: PartialState }) => state;\n\nexport const selectTasks = createDraftSafeSelector(\n  selectSelf,\n  (state) => state.task.tasks.slice(state.task.range?.skip, state.task.range?.take),\n);\n\nexport const selectCurrentTask = createDraftSafeSelector(\n  selectSelf,\n  (state) => state.task.tasks.find((i) => i.id === state.task.currentTaskId),\n);\n\nexport default taskSlice.reducer;\n","import React, { Fragment } from 'react';\nimport { Box, Chip, Stack } from '@mui/material';\n\nfunction Tag({ tags, handleDelete }: {\n  tags: string[];\n  handleDelete: (text: string) => () => void\n}) {\n  return (\n    <Box sx={{ margin: '0 0.1rem 0 0', display: 'flex' }}>\n      <Stack direction=\"row\" gap={0.2}>\n        {tags.map((data, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={data + i}>\n            <Chip\n              label={data}\n              variant=\"outlined\"\n              onDelete={handleDelete(data)}\n            />\n          </Fragment>\n        ))}\n      </Stack>\n    </Box>\n  );\n}\n\nexport default Tag;\n","import React, {\n  cloneElement, useEffect, useRef, useState,\n} from 'react';\nimport type { KeyboardEvent } from 'react';\nimport { Box } from '@mui/material';\nimport Tags from './Tags';\n\nfunction InputTags({\n  component, initiate, insert, remove,\n}: {\n  component: JSX.Element;\n  initiate: (callback: (tags: string[]) => void) => void;\n  insert: (index: number, text: string) => void;\n  remove: (index: number) => void;\n}) {\n  const [tags, setTags] = useState<string[]>([]);\n  const tagRef = useRef<HTMLInputElement>();\n\n  useEffect(() => {\n    initiate((initialTags) => {\n      if (initialTags) {\n        setTags(initialTags);\n      }\n    });\n  }, [initiate]);\n\n  const handleDelete = (text: string) => () => {\n    const idx = tags.findIndex((val) => val === text);\n    const newTags = tags.filter((val) => val !== text);\n    setTags(newTags);\n    remove(idx);\n  };\n  const handleOnSubmit = () => (e: KeyboardEvent<HTMLDivElement>) => {\n    if (e.code === 'Enter') {\n      e.stopPropagation();\n      e.preventDefault();\n      if (tagRef?.current) {\n        const tag = tagRef.current.value;\n        setTags((prev) => {\n          if (prev.find((t) => t === tag)) {\n            return prev;\n          }\n          const idx = prev.length;\n          insert(idx, tag);\n          return [...prev, tag];\n        });\n        tagRef.current.value = '';\n      }\n    }\n  };\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      {cloneElement(component, {\n        autoComplete: 'off',\n        onKeyDown: handleOnSubmit(),\n        placeholder: tags.length < 5 ? 'Enter tags' : '',\n        inputRef: tagRef,\n        InputProps: {\n          startAdornment: (\n            <Tags tags={tags} handleDelete={handleDelete} />\n          ),\n        },\n      })}\n    </Box>\n  );\n}\n\nexport default InputTags;\n","import * as yup from 'yup';\nimport { Task } from '../task.type';\n\nexport const EMPTY_TASK: Task = {\n  id: '',\n  title: '',\n  description: '',\n  priority: 'low',\n  tags: [],\n};\n\nexport const priorities = ['low', 'mediate', 'high'] as Task['priority'][];\n\nexport const validationSchema = yup.object({\n  title: yup\n    .string()\n    .trim()\n    .min(1)\n    .required('Email is required'),\n  description: yup\n    .string()\n    .min(8, 'description should be of minimum 8 characters length'),\n  tags: yup\n    .array()\n    .of(yup.string())\n    .nullable(),\n  priority: yup\n    .mixed()\n    .oneOf(priorities)\n    .defined(),\n});\n","import React, { useCallback, useEffect } from 'react';\nimport {\n  Button, Typography, Box, TextField, Radio, RadioGroup, FormControl, FormControlLabel, Grid,\n} from '@mui/material';\nimport { FieldArray, FormikProvider, useFormik } from 'formik';\nimport { Task } from '../task.type';\nimport InputTags from './tags';\nimport { validationSchema, EMPTY_TASK, priorities } from './taskForm.validations';\n\ntype Props = { task?: Task, onSubmit: (data: Task) => void };\n\nfunction TaskForm({ task, onSubmit }: Props) {\n  const formik = useFormik<Task>({\n    initialValues: EMPTY_TASK,\n    validationSchema,\n    onSubmit,\n  });\n\n  useEffect(() => {\n    if (task) {\n      Object.keys(task).forEach((i) => {\n        const key = i as keyof Task;\n        formik.setFieldValue(i, task[key]);\n      });\n    }\n  }, [task]);\n\n  const setInitialTags = useCallback((callback) => {\n    callback(task?.tags);\n  }, [task]);\n\n  return (\n    <FormikProvider value={formik}>\n      <Box\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        style={{ maxWidth: '500px' }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <Grid\n          container\n          alignItems=\"center\"\n          direction=\"column\"\n          spacing={2}\n        >\n          <Grid item>\n            <FormControl>\n              <TextField\n                fullWidth\n                name=\"title\"\n                label=\"Title\"\n                value={formik.values.title}\n                onChange={formik.handleChange}\n                error={formik.touched.title && Boolean(formik.errors.title)}\n                helperText={formik.touched.title && formik.errors.title}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormControl>\n              <TextField\n                fullWidth\n                name=\"description\"\n                label=\"Description\"\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                error={formik.touched.description && Boolean(formik.errors.description)}\n                helperText={formik.touched.description && formik.errors.description}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormControl>\n              <FieldArray\n                name=\"tags\"\n                validateOnChange={false}\n                render={(arrayHelpers) => (\n                  <InputTags\n                    component={(\n                      <TextField\n                        fullWidth\n                        error={formik.touched.tags && Boolean(formik.errors.tags)}\n                        helperText={formik.touched.tags && formik.errors.tags}\n                      />\n                    )}\n                    initiate={setInitialTags}\n                    insert={arrayHelpers.insert}\n                    remove={arrayHelpers.remove}\n                  />\n                )}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormControl>\n              {Boolean(formik.touched.priority)\n                && (\n                  <Typography color=\"red\">\n                    {formik.errors.priority}\n                  </Typography>\n                )}\n              <RadioGroup aria-label=\"anonymous\" name=\"anonymous\" value={false} row>\n                {priorities.map((i) => (\n                  <FormControlLabel\n                    checked={formik.values.priority === i}\n                    control={<Radio />}\n                    value={`${i}`}\n                    name=\"priority\"\n                    label={i}\n                    onChange={formik.handleChange}\n                    key={i}\n                  />\n                ))}\n              </RadioGroup>\n              {Boolean(formik.touched.priority)\n                && (\n                  <Typography color=\"red\">\n                    {formik.errors.priority}\n                  </Typography>\n                )}\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n              {task?.id ? 'edit' : 'add'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </FormikProvider>\n  );\n}\n\nTaskForm.defaultProps = { task: undefined };\n\nexport default TaskForm;\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addTask, editTask, loadCurrent, selectCurrentTask,\n} from '../task.slice';\nimport { Task } from '../task.type';\nimport TaskForm from './TaskForm';\n\nfunction TaskPost() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { taskId } = useParams();\n  const task = useSelector(selectCurrentTask);\n  const [formState, setFormState] = useState<Task>();\n\n  useEffect(() => {\n    if (taskId) {\n      dispatch(loadCurrent(taskId));\n    }\n  }, [taskId]);\n\n  useEffect(() => {\n    setFormState(task);\n  }, [taskId, task]);\n\n  const submitData = (data: Task) => {\n    if (data.id) {\n      dispatch(editTask(data));\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      data.id = String(Math.random());\n      dispatch(addTask(data));\n    }\n    navigate('../');\n  };\n  return (\n    <Grid container columns={{ xs: 4, md: 12 }}>\n      <Grid item xs={2}>\n        {taskId\n          && (\n            <Typography>\n              edit task :\n              {taskId}\n            </Typography>\n          )}\n        {\n          !taskId\n          && <Typography>add a new task</Typography>\n        }\n      </Grid>\n      <Grid item xs={4}>\n        <TaskForm task={formState} onSubmit={submitData} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default TaskPost;\n","import { useState } from 'react';\n\nfunction useModal() {\n  const [isOpen, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return {\n    isOpen,\n    handleOpen,\n    handleClose,\n  };\n}\n\nexport default useModal;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\n\nconst style = {\n  position: 'absolute' as 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function BasicModal({ open, onClose, children }: {\n  open: boolean;\n  onClose: () => void;\n  children: JSX.Element;\n}) {\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          {children}\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Button, Container, Grid } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { loadCurrent } from 'feature/task/task.slice';\nimport TaskPost from 'feature/task/taskPost';\nimport { Modal, useModal } from './modal';\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const { isOpen, handleOpen, handleClose } = useModal();\n  const handleCreateTask = () => {\n    dispatch(loadCurrent());\n    handleOpen();\n  };\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container columns={{ xs: 4, md: 12 }}>\n        <Grid item xs={2}>\n          <Button onClick={handleCreateTask}>create new task</Button>\n          <Button component={Link} to=\"/tasks\">tasks list</Button>\n        </Grid>\n      </Grid>\n      <Modal open={isOpen} onClose={handleClose}>\n        <TaskPost />\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Home;\n","/* eslint-disable react/function-component-definition */\nimport React from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Button, Container, Grid } from '@mui/material';\n\nfunction TaskLayout() {\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container columns={{ xs: 4, md: 12 }}>\n        <Grid item xs={4}>\n          <Button component={Link} to=\"../\">home</Button>\n          <Button component={Link} to=\"./\">tasks</Button>\n        </Grid>\n\n        <Grid item xs={4}>\n          <Outlet />\n        </Grid>\n\n      </Grid>\n    </Container>\n  );\n}\n\nexport default TaskLayout;\n","import React from 'react';\nimport {\n  Avatar, Box, Button, ButtonGroup, Grid, Paper, Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { Task } from '../task.type';\n\nfunction TaskComponent({ task }: { task: Task }) {\n  return (\n    <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3 }} key={task.id}>\n      <Paper sx={{\n        maxWidth: 400, my: 1, mx: 'auto', p: 2,\n      }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>{task.title}</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography variant=\"h4\" component={Link} to={`${task.id}`}>{task.title}</Typography>\n            <Typography noWrap>{task.description}</Typography>\n          </Grid>\n          <Grid item>\n            <ButtonGroup variant=\"outlined\" aria-label=\"outlined secondary button group\" size=\"small\">\n              <Button component={Link} to={`edit/${task.id}`}>🖊</Button>\n              <Button component={Link} to={`delete/${task.id}`}>🗑</Button>\n            </ButtonGroup>\n            <div>\n              {task.tags.join(', ')}\n            </div>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Box>\n\n  );\n}\n\nexport default TaskComponent;\n","import React from 'react';\nimport { Container, Grid, Typography } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport TaskComponent from './TaskItem';\nimport { selectTasks } from '../task.slice';\n\nfunction TasksList() {\n  const tasks = useSelector(selectTasks);\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container columns={{ xs: 4, md: 12 }}>\n        <Grid item xs={4} md={12}>\n          <Typography>list of tasks</Typography>\n        </Grid>\n        {tasks.map((task) => <TaskComponent task={task} />)}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default TasksList;\n","import React from 'react';\nimport {\n  Grid, Typography, Avatar, Box, Paper,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { Task } from '../task.type';\n\nfunction TaskItem({ task }: { task: Task }) {\n  return (\n    <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3 }} key={task.id}>\n      <Paper sx={{\n        maxWidth: 400, my: 1, mx: 'auto', p: 2,\n      }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>{task.title}</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography variant=\"h4\">{task.title}</Typography>\n          </Grid>\n        </Grid>\n        <Grid item xs zeroMinWidth>\n          <Typography>{task.description}</Typography>\n        </Grid>\n        <Grid item>\n          {task.tags.map((tag) => (<Typography variant=\"caption\">{tag}</Typography>))}\n        </Grid>\n        <Grid item>\n          {['edit', 'delete'].map((i) => (\n            <Typography variant=\"caption\" component={Link} to={`../${i}/${task.id}`}>{i}</Typography>\n          ))}\n        </Grid>\n      </Paper>\n    </Box>\n  );\n}\n\nexport default TaskItem;\n","import React, { useEffect } from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadCurrent, selectCurrentTask } from '../task.slice';\nimport TaskItem from './task.item';\n\nfunction Task() {\n  const { taskId } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (taskId) {\n      dispatch(loadCurrent(taskId));\n    }\n  }, [taskId]);\n  const task = useSelector(selectCurrentTask);\n  return (\n    <Grid container columns={{ xs: 4, md: 12 }}>\n      <Grid item xs={2}>\n        <Typography>task view</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        {task && <TaskItem task={task} />}\n        {!task && <Typography>task not found</Typography>}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Task;\n","import React from 'react';\nimport { Grid, Typography } from '@mui/material';\n\nfunction Task() {\n  return (\n    <Grid container columns={{ xs: 4, md: 12 }}>\n      <Grid item xs={2}>\n        <Typography>delete task</Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Task;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Task } from './task.type';\nimport { initTasks } from './task.slice';\n\nfunction useTasks() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const tasks: Task[] = Array<number>(2).fill(1).map<Task>((x, i) => ({\n      id: String(x + i),\n      title: String(x + i),\n      description: `hi this is description for ${i + x}`,\n      tags: ['tag 1', 'tag 2'],\n      priority: 'low',\n    }));\n    dispatch(initTasks(tasks));\n  }, []);\n}\n\nexport default useTasks;\n","import useTasks from 'feature/task/useTasks';\n\nfunction useStartup() {\n  useTasks();\n}\n\nexport default useStartup;\n","import React from 'react';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport Home from './feature/home';\nimport TaskLayout from './feature/task/task.layout';\nimport Tasks from './feature/task/tasks';\nimport Task from './feature/task/task';\nimport TaskPost from './feature/task/taskPost';\nimport TaskDelete from './feature/task/taskDelete';\nimport useStartup from './feature/home/useStartup';\n\nfunction App() {\n  useStartup();\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\">\n          <Route index element={<Home />} />\n          <Route path=\"tasks\" element={<TaskLayout />}>\n            <Route index element={<Tasks />} />\n            <Route path=\":taskId\" element={<Task />} />\n            <Route path=\"create\" element={<TaskPost />} />\n            <Route path=\"edit/:taskId\" element={<TaskPost />} />\n            <Route path=\"delete/:taskId\" element={<TaskDelete />} />\n          </Route>\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport taskReducer from '../feature/task/task.slice';\n\nexport default configureStore({\n  reducer: {\n    task: taskReducer,\n  },\n});\n","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#0052cc',\n    },\n    secondary: {\n      main: '#edf2ff',\n    },\n  },\n});\n\nconst mainTheme = createTheme(theme, {\n  palette: {\n    info: {\n      main: theme.palette.secondary.main,\n    },\n  },\n});\n\nexport default mainTheme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@mui/material';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport store from './redux/store';\nimport mainTheme from './theme/main.theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={mainTheme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}